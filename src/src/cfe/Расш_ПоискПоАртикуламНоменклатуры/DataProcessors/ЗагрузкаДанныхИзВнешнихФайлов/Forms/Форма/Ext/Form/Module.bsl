
&НаСервере
Процедура Расш1_СопоставитьДанныеТабличногоДокументаСДаннымиИБ_ПоискАртикулХарактиристики()
	УточнениеНоменклатуры.Очистить();
	ПодобраннаяНоменклатура.Очистить();
	Объект.Товары.Очистить();
	
	ЗаполнитьТаблицуНоменклатурыИШтрихкодов();
	
	ДобавитьКолонкуАртикулХарактеристикиВТаблицуНоменклатуры();
	
	НомераКолонок = Новый Соответствие;
	НомерКолонки = 1;
	
	НомераКолонок.Вставить("КолонкаШтрихкод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаКод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаАртикул", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаНоменклатура", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		НомераКолонок.Вставить("КолонкаХарактеристика", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьКоличество Тогда
		НомераКолонок.Вставить("КолонкаКоличество", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьЗапасы Тогда
		НомераКолонок.Вставить("КолонкаМинимальныйОстаток", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		НомераКолонок.Вставить("КолонкаМаксимальныйОстаток", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьЦены Тогда
		НомераКолонок.Вставить("КолонкаЦена", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	Если ЗагружатьСуммы Тогда
		Если ИспользоватьРучныеСкидкиВЗакупках И ЗагружатьСкидки Тогда
			НомераКолонок.Вставить("КолонкаПроцентРучнойСкидки", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
			НомераКолонок.Вставить("КолонкаСуммаРучнойСкидки", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
		КонецЕсли;
		НомераКолонок.Вставить("КолонкаСумма", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		Если НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			НомераКолонок.Вставить("КолонкаСуммаНДС", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
			НомерКолонки = НомерКолонки +1;
			Если НЕ ЦенаВключаетНДС Тогда
				НомераКолонок.Вставить("КолонкаСуммаСНДС", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
				НомерКолонки = НомерКолонки +1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЗагружатьГТД Тогда
		НомераКолонок.Вставить("КолонкаНомерГТД", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
		НомераКолонок.Вставить("КолонкаСтранаПроисхождения", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
		НомерКолонки = НомерКолонки +1;
	КонецЕсли;
	
	НомерСтроки = 2;
	СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	ЗаполненыНоменклатураКодАртикулШтрихкод = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаШтрихкод")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКод")).Текст);
	ЕстьОшибкиРаспознавания = Ложь;
	
	УпаковочныйЛистСинонимВРег   = СтрЗаменить(ВРег(Метаданные.Документы.УпаковочныйЛист.Синоним), " ", "");
	ДлинаСинонимаУпаковочныйЛист = СтрДлина(УпаковочныйЛистСинонимВРег);
	КодыУпаковочныхЛистовНаПроверку.Очистить();
	
	Пока ЗаполненыНоменклатураКодАртикулШтрихкод Цикл
		
		НоваяСтрока = УточнениеНоменклатуры.Добавить();
		Количество = 0;
		НоваяСтрока.КодСтроки = НомерСтроки;
		
		Попытка
			НоваяСтрока.Штрихкод = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаШтрихкод")).Текст;
			НоваяСтрока.Код = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКод")).Текст;
			НоваяСтрока.Артикул = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст;
			НоваяСтрока.НоменклатураНаименование = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст;
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				НоваяСтрока.ХарактеристикаНаименование = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаХарактеристика")).Текст;
			КонецЕсли;
			Если ЗагружатьКоличество Тогда
				Количество = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКоличество")).Текст;
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		Если ЗагружатьКоличество Тогда
			Попытка
				НоваяСтрока.Количество = Число(СтрЗаменить(Количество, " ", "")); 
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Если ЗагружатьЗапасы Тогда
			
			МинимальныйОстаток = 0;
			Попытка
				МинимальныйОстаток = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаМинимальныйОстаток")).Текст;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Попытка
				НоваяСтрока.МинимальныйОстаток = Число(СтрЗаменить(МинимальныйОстаток, " ", ""));
			Исключение
			КонецПопытки;
			
			МаксимальныйОстаток = 0;
			Попытка
				МаксимальныйОстаток = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаМаксимальныйОстаток")).Текст;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Попытка
				НоваяСтрока.МаксимальныйОстаток = Число(СтрЗаменить(МаксимальныйОстаток, " ", ""));
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
		Если ЗагружатьЦены Тогда
			Цена = 0;
			Попытка
				Цена = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаЦена")).Текст;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Попытка
				НоваяСтрока.Цена = Число(СтрЗаменить(Цена, " ", ""));
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
		Если ЗагружатьСуммы Тогда
			ПроцентРучнойСкидки = 0;
			СуммаРучнойСкидки   = 0;
			Сумма               = 0;
			СуммаНДС            = 0;
			СуммаСНДС           = 0;
			
			Попытка
				Если ИспользоватьРучныеСкидкиВЗакупках И ЗагружатьСкидки Тогда
					ПроцентРучнойСкидки = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаПроцентРучнойСкидки")).Текст;
					СуммаРучнойСкидки = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСуммаРучнойСкидки")).Текст;
					ПроцентРучнойСкидки = СтрЗаменить(ПроцентРучнойСкидки, "%", "");
				КонецЕсли;
				Если НомераКолонок.Получить("КолонкаСумма") <>  Неопределено Тогда
					Сумма     = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСумма")).Текст;
				КонецЕсли;
				Если НомераКолонок.Получить("КолонкаСуммаНДС") <>  Неопределено Тогда
					СуммаНДС  = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСуммаНДС")).Текст;
				КонецЕсли;
				Если НомераКолонок.Получить("КолонкаСуммаСНДС") <>  Неопределено Тогда
					СуммаСНДС = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСуммаСНДС")).Текст;
				КонецЕсли;
				
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Попытка
				НоваяСтрока.ПроцентРучнойСкидки = Число(СтрЗаменить(ПроцентРучнойСкидки, " ", ""));
			Исключение
				
			КонецПопытки;
			
			Попытка
				НоваяСтрока.СуммаРучнойСкидки = Число(СтрЗаменить(СуммаРучнойСкидки, " ", ""));
			Исключение
				
			КонецПопытки;
			
			Попытка
				НоваяСтрока.Сумма = Число(СтрЗаменить(Сумма, " ", "")); 
			Исключение
				
			КонецПопытки;
			
			Попытка
				НоваяСтрока.СуммаНДС = Число(СтрЗаменить(СуммаНДС, " ", "")); 
			Исключение
				
			КонецПопытки;
			
			Попытка
				НоваяСтрока.СуммаСНДС = Число(СтрЗаменить(СуммаСНДС, " ", ""));
			Исключение
				
			КонецПопытки;
			
		КонецЕсли;
		
		Если ЗагружатьГТД Тогда
			Попытка
				НомерГТД            = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНомерГТД")).Текст;
				СтранаПроисхождения = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаСтранаПроисхождения")).Текст;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
			Если ЗначениеЗаполнено(НомерГТД) Тогда
				НоваяСтрока.НомерГТД             = СокрЛП(НомерГТД);
				Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
					НоваяСтрока.СтранаПроисхождения  = ВРег(СокрЛП(СтранаПроисхождения));
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		СтрокаПоискаКод            = ВРег(СтрЗаменить(НоваяСтрока.Код, " ", "")); 
		СтрокаПоискаАртикул        = ВРег(СтрЗаменить(НоваяСтрока.Артикул, " ", "")); 
		СтрокаПоискаНоменклатура   = ВРег(СтрЗаменить(НоваяСтрока.НоменклатураНаименование, " ", ""));
		СтрокаПоискаХарактеристика = ВРег(СтрЗаменить(НоваяСтрока.ХарактеристикаНаименование, " ", ""));
		
		Если ЗначениеЗаполнено(НоваяСтрока.Артикул) Тогда
			//НайденныеСтроки=ПоискПоАртикулуХарактеристики(ТаблицаНоменклатуры,СтрокаПоискаАртикул);
			НайденныеСтроки=ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("АртикулХарактеристики", НоваяСтрока.Артикул));
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ПодобранныеРанееТовары = ПодобраннаяНоменклатура.НайтиСтроки(Новый Структура("Номенклатура, КодСтроки",НайденнаяСтрока.Номенклатура, НомерСтроки));
				Если ПодобранныеРанееТовары.Количество() = 0 Тогда
					ПодобраннаяСтрока = ПодобраннаяНоменклатура.Добавить();
					ПодобраннаяСтрока.КодСтроки = НомерСтроки;
					ЗаполнитьЗначенияСвойств(ПодобраннаяСтрока, НайденнаяСтрока);
				КонецЕсли;
			КонецЦикла;
			
			
		КонецЕсли;
		
		// Заполнение тч Товары.
		НоваяСтрокаТовары = Объект.Товары.Добавить();
		НоваяСтрокаТовары.ЗагружаемаяНоменклатура    = НоваяСтрока.НоменклатураНаименование;
		НоваяСтрокаТовары.ЗагружаемаяХарактеристика  = НоваяСтрока.ХарактеристикаНаименование;
		НоваяСтрокаТовары.ЗагружаемыйАртикул         = НоваяСтрока.Артикул;
		НоваяСтрокаТовары.ЗагружаемыйШтрихкод        = НоваяСтрока.Штрихкод;
		НоваяСтрокаТовары.ЗагружаемыйКод             = НоваяСтрока.Код;
		НоваяСтрокаТовары.ЗагружаемыйНомерГТД        = НоваяСтрока.НомерГТД;
		НоваяСтрокаТовары.ЗагружаемаяСтранаПроисхождения = НоваяСтрока.СтранаПроисхождения;
		Если ЗагружатьКоличество Тогда
			НоваяСтрокаТовары.КоличествоУпаковок        = НоваяСтрока.Количество;
		КонецЕсли;
		НоваяСтрокаТовары.КодСтроки                  = НомерСтроки;
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, НоваяСтрока,,"Артикул");
		
		МассивПодобраннойНоменклатуры = ПодобраннаяНоменклатура.НайтиСтроки(Новый Структура("КодСтроки", НомерСтроки));
		
		Если МассивПодобраннойНоменклатуры.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, МассивПодобраннойНоменклатуры.Получить(0));
		КонецЕсли;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НалогообложениеНДС);
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", ВернутьМногооборотнуюТару);
		Если ЗагружатьКоличество Тогда
			
			Если НоваяСтрокаТовары.Количество > 0 Тогда
				СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ НеПересчитыватьСуммовыеПоказатели Тогда
			СтруктураПересчетаСуммы = Новый Структура;
			СтруктураПересчетаСуммы.Вставить("ЦенаВключаетНДС", ЦенаВключаетНДС);
			
			ЕстьСкидки = ЗначениеЗаполнено(НоваяСтрока.СуммаРучнойСкидки) ИЛИ ЗначениеЗаполнено(НоваяСтрока.ПроцентРучнойСкидки);
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СуммаНДС) ИЛИ ЕстьСкидки Тогда
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СуммаСНДС)  ИЛИ ЕстьСкидки Тогда
				СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
			КонецЕсли; 
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Сумма) ИЛИ ЕстьСкидки Тогда
				СтруктураДействий.Вставить("ПересчитатьСумму");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СуммаРучнойСкидки) И ЗначениеЗаполнено(НоваяСтрока.ПроцентРучнойСкидки) Тогда
				СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
			КонецЕсли;
			Если ЗначениеЗаполнено(НоваяСтрока.СуммаРучнойСкидки) И НЕ ЗначениеЗаполнено(НоваяСтрока.ПроцентРучнойСкидки) Тогда
				СтруктураДействий.Вставить("ПересчитатьПроцентРучнойСкидки");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(НоваяСтрока.СуммаРучнойСкидки) ИЛИ ЗначениеЗаполнено(НоваяСтрока.ПроцентРучнойСкидки) Тогда
				СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
			КонецЕсли;
			
		КонецЕсли;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, Неопределено);
		
		НомерСтроки = НомерСтроки + 1;
		СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
		
		Попытка
			ЗаполненыНоменклатураКодАртикулШтрихкод = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаШтрихкод")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКод")).Текст);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;
	
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	
	Если ЗагружатьГТД Тогда
		ДополнитьТоварыНомерамиГТД();
	КонецЕсли;
	
	Если Объект.ЗагружатьУпаковочныеЛисты Тогда
		ЗаполнитьУпаковочныеЛисты();
	КонецЕсли;
	
	ТаблицаНоменклатуры.Очистить();
	ТаблицаШтрихкодов.Очистить();
	УточнениеНоменклатуры.Очистить();
	
КонецПроцедуры

Функция ПоискПоАртикулуХарактеристики(ТЗ,СтрокаПоискаАртикул)
	НайденныеСтроки=Новый Массив;
	Для каждого стрТЗ Из ТЗ Цикл
		Если стрТЗ.Номенклатура.ИспользованиеХарактеристик=Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
			Если стрТЗ.Характеристика.ДополнительныеРеквизиты.Количество()=1 тогда 
				//стрТЧ=стрТЗ.Характеристика.ДополнительныеРеквизиты.Найти("Артикул","Свойство");
				АртикулХарактеристики=Неопределено;
				Для каждого стрТЧ Из стрТЗ.Характеристика.ДополнительныеРеквизиты Цикл
					Если стрТЧ.Свойство.Заголовок="Артикул" Тогда 
						АртикулХарактеристики=стрТЧ.Значение;
					КонецЕсли;
				КонецЦикла;			
				Если ВРег(АртикулХарактеристики)=СтрокаПоискаАртикул Тогда 
					НайденныеСтроки.Добавить(стрТЗ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат НайденныеСтроки;
КонецФункции // ТаблицаНоменклатурыАртикулХарактеристикПоиск()


&НаСервере
&Вместо("СопоставитьДанныеТабличногоДокументаСДаннымиИБ")
Процедура Расш1_СопоставитьДанныеТабличногоДокументаСДаннымиИБ()
	Если ПоискПоАртикуламХарактеристик Тогда
		Расш1_СопоставитьДанныеТабличногоДокументаСДаннымиИБ_ПоискАртикулХарактиристики();
	Иначе 
		ПродолжитьВызов();
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьКолонкуАртикулХарактеристикиВТаблицуНоменклатуры()
	
	тзНоменклатуры=ТаблицаНоменклатуры.Выгрузить();
	ТаблицаНоменклатуры.Очистить();

	//тзНоменклатуры.Колонки.Добавить("АртикулХарактеристики");
	
	тзРезультат=тзНоменклатуры.СкопироватьКолонки();
	//тзРезультат=ТаблицаНоменклатуры.СкопироватьКолонки();
	
	МассивАртикуловХарактеристик=Расш1_ВыгрузитьАртикулыИзТабличногоДокумента();

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение КАК Значение,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство.Заголовок КАК СвойствоЗаголовок
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
	|ГДЕ
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство.Имя = &СвойствоИмя
	|	И ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка.Владелец.ИспользованиеХарактеристик = &ИспользованиеХарактеристик
	|	И ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение В (&ЗначениеСписок)";
	
	Запрос.УстановитьПараметр("СвойствоИмя", "Артикул_1eb05c87409c409d8866a8b82c5924a7");
	Запрос.УстановитьПараметр("ИспользованиеХарактеристик", Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры);
	Запрос.УстановитьПараметр("ЗначениеСписок",МассивАртикуловХарактеристик);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСтрокТаблицыНоменклатуры=тзНоменклатуры.НайтиСтроки(Новый Структура("Характеристика", ВыборкаДетальныеЗаписи.Ссылка));
		Если Не МассивСтрокТаблицыНоменклатуры.Количество()=0 Тогда
			МассивСтрокТаблицыНоменклатуры[0].АртикулХарактеристики=ВыборкаДетальныеЗаписи.Значение;
			СтрокаТЗРезультат=тзРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЗРезультат,МассивСтрокТаблицыНоменклатуры[0]);
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	ТаблицаНоменклатуры.Загрузить(тзРезультат);
КонецПроцедуры

Функция Расш1_ВыгрузитьАртикулыИзТабличногоДокумента()
	
	Перем Артикул, ЗаполненыНоменклатураКодАртикулШтрихкод, НомераКолонок, НомерКолонки, НомерСтроки, СтроковыйНомер;
	
	МассивАртикулов=Новый Массив;
	
	НомераКолонок = Новый Соответствие;
	НомерКолонки = 1;
	
	НомераКолонок.Вставить("КолонкаШтрихкод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаКод", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаАртикул", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	НомераКолонок.Вставить("КолонкаНоменклатура", "C" + Формат(НомерКолонки, "ЧН=0; ЧГ=0"));
	НомерКолонки = НомерКолонки +1;
	
	НомерСтроки = 2;
	СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
	ЗаполненыНоменклатураКодАртикулШтрихкод = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаШтрихкод")).Текст)
	Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКод")).Текст);
	
	Пока ЗаполненыНоменклатураКодАртикулШтрихкод Цикл
		
		Попытка
			Артикул = ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст;	
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
		МассивАртикулов.Добавить(Артикул);
		
		НомерСтроки = НомерСтроки + 1;
		СтроковыйНомер = Формат(НомерСтроки, "ЧН=0; ЧГ=0");
		Попытка
			ЗаполненыНоменклатураКодАртикулШтрихкод = ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаАртикул")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаНоменклатура")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаШтрихкод")).Текст)
			Или ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + СтроковыйНомер + НомераКолонок.Получить("КолонкаКод")).Текст);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
	Возврат МассивАртикулов;
КонецФункции
