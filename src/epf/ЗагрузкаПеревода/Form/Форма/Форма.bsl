
// загрузка ///////////////////////////////////////////

&НаКлиенте
Процедура Загрузить(Команда)
	АдресФайла = "";
	ИмяФайлаДляРасширения = "";

	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьСервВызов", ЭтотОбъект, Новый Структура("ВидЦены", ВидЦены));
	НачатьПомещениеФайла(ОписаниеОповещения, АдресФайла, ИмяФайла ,Ложь, УникальныйИдентификатор);

	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Загрузка завершена";
	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Сообщить();
	
	//ЗагрузитьСервВызов(Истина, АдресФайла, ИмяФайлаДляРасширения, Неопределено);
	 //Форма=Документ.ПолучитьФорму();
	 Если ВладелецФормы<>Неопределено Тогда
		 ВладелецФормы.прочитать();
	 КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСервВызов(Результат, пАдресФайла, ВыбранноеИмяФайла, ДополнительныеПараметры)

	ВремФайл=Новый Файл(ИмяФайла);
	
	ЗагрузкаИз_csv=ВремФайл.Расширение=".csv";
	
	//ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	//ВременноеУникальноеИмяФайла=ПолучитьИмяВременногоФайла("xlsx");
	ВременноеУникальноеИмяФайла=ПолучитьИмяВременногоФайла(СтрЗаменить(ВремФайл.Расширение,".",""));
	
	
	ВремФайл=Новый Файл (ВременноеУникальноеИмяФайла);
	
	ПолноеИмяФВеренногоФайла=КаталогВременныхФайлов()+ВремФайл.Имя;

	
 	ИмяФайлаНаСервере(пАдресФайла, ПолноеИмяФВеренногоФайла);

	
	ЗагрузитьНаСервере(ПолноеИмяФВеренногоФайла, ЛистЕксель, НачальнаяСтрока,  КолонкаЦена, ДополнительныеПараметры, ЗагрузкаИз_csv);
	
	
	
	
	//ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");   

	ВремФайл=Новый Файл (ПолноеИмяФВеренногоФайла);

	
	Если ВремФайл.Существует() Тогда
		Попытка
			УдалитьФайлы(ВремФайл.ПолноеИмя);
		Исключение
			СообщитьСерв("Ошибка удаления временного файла "+ПолноеИмяФВеренногоФайла,ЭтаФорма);
		КонецПопытки
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
процедура ИмяФайлаНаСервере(АдресФайла, НовоеИмяФайлаНаСервере)

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(НовоеИмяФайлаНаСервере);
	
конецПроцедуры // ИмяФайлаНаСервере()

&НаКлиенте
процедура ИмяФайлаНаКлиент(АдресФайла, НовоеИмяФайлаНаСервере)

	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанные.Записать(НовоеИмяФайлаНаСервере);
	
конецПроцедуры // ИмяФайлаНаСервере()



&НаСервере
Функция ПрочитатьБыстроЛистExcel(ТЗ = Неопределено, ЛистЭксель = Неопределено, НомерПервойСтроки = 1, НомерПервойКолонки = 1, ВсегоСтрок = 0, ВсегоКолонок = 0, СчитываемыйОбъект="Value") Экспорт
	
	Если ЛистЭксель = Неопределено Тогда
		ЛистЭксель = ПолучитьCOMОбъект(,"Excel.Application");
	КонецЕсли;
	Если ВсегоСтрок = 0 Тогда
		ВсегоСтрок = ЛистЭксель.Cells.SpecialCells(11).Row;
	КонецЕсли;
	Если ВсегоКолонок = 0 Тогда
		ВсегоКолонок = ЛистЭксель.Cells.SpecialCells(11).Column;
	КонецЕсли;
	
 	КоличествоКолонок=ВсегоКолонок-НомерПервойКолонки+1;

	
	Если ТЗ = Неопределено Тогда
		ТЗ =  Новый ТаблицаЗначений;
		//Для Счетчик = 1 По ВсегоКолонок Цикл
		Для Счетчик = 1 По КоличествоКолонок Цикл
			ТЗ.Колонки.Добавить("Колонка"+Счетчик, Новый ОписаниеТипов("Строка"));
		КонецЦикла;
	КонецЕсли;
	Для Счетчик = НомерПервойСтроки По ВсегоСтрок Цикл
		НоваяСтрока = ТЗ.Добавить();
	КонецЦикла;
	
	Область = ЛистЭксель.Range(ЛистЭксель.Cells(НомерПервойСтроки,НомерПервойКолонки), ЛистЭксель.Cells(ВсегоСтрок,ВсегоКолонок));
	//Данные = Область.Value.Выгрузить();
	Данные = Область[СчитываемыйОбъект].Выгрузить();
	
	
	//Для Счетчик = 0 По ВсегоКолонок-1 Цикл
	Для Счетчик = 0 По КоличествоКолонок-1 Цикл
		ТЗ.ЗагрузитьКолонку(Данные[Счетчик], Счетчик);
	КонецЦикла;
	ЛистЭксель = Неопределено;
	Возврат ТЗ;
КонецФункции

//ПреобразоватьТекстCSVвТЗ () импортирует данные в ТЗ из текста формата CSV
//Параметры:
//ТекстCSV 		- Строка, содержащая текст в формате csv
//Разделитель 	- Для формата CSV разделителем является ',', но т.к. 
//				  Excel берет разделитель из региональных стандартов, то
//				  используется ';', поддерживает многострочные поля
//
Функция ПреобразоватьТекстCSVвТЗ(пИмяФайла, Разделитель=";", пКодировка) Экспорт
	ТЗ = Новый ТаблицаЗначений;
	ОсобаяСтрока = "$#%^&*!xyxb$#%&*!^";	// для замены ""
	
	ЗагружаемыйФайл = Новый ТекстовыйДокумент;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	МассивТипов.Добавить(Тип("Число"));
	КвЧисла = Новый КвалификаторыЧисла(15, 2);
	КвСтроки = Новый КвалификаторыСтроки(300);
	
	ДопустимыеТипы = Новый ОписаниеТипов( МассивТипов,КвЧисла, КвСтроки);
	
	
	Попытка
		ЗагружаемыйФайл.Прочитать(пИмяФайла, пКодировка);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		Возврат Тз;
	КонецПопытки;
	
    ТекстCSV=ЗагружаемыйФайл.ПолучитьТекст();
	
	НомерСтроки = 1;
	Стр = СтрПолучитьСтроку(ТекстCSV,НомерСтроки);
	Пока НомерСтроки <= СтрЧислоСтрок(ТекстCSV) Цикл
		СтрокаТЗ = ТЗ.Добавить();
		НомерПоля = 0;
		Пока Стр <> "" Цикл
			Токен = "";
			ПозицияРазделителя = Найти(стр, Разделитель);
			ПозицияОткрКавычек = Найти(стр, """");
			Если (ПозицияРазделителя > ПозицияОткрКавычек ИЛИ ПозицияРазделителя = 0) И ПозицияОткрКавычек > 0 Тогда
				// начинающееся с кавычек читаем до тех пор
				Токен = Сред(Стр, 1, ПозицияОткрКавычек);
				Стр = СтрЗаменить(Сред(Стр, ПозицияОткрКавычек+1), """""", ОсобаяСтрока);
				
				ПозицияЗакрКавычек = Найти(Стр, """");
				Пока ПозицияЗакрКавычек = 0 Цикл
					Токен = Токен + Стр + Символы.ПС;
					НомерСтроки = НомерСтроки + 1;
					Стр = СтрПолучитьСтроку(ТекстCSV, НомерСтроки);
					Стр = СтрЗаменить(Стр, """""", ОсобаяСтрока);
					// пока не встретим закрывающие
					ПозицияЗакрКавычек = Найти(Стр, """");
				КонецЦикла;
				ПозицияРазделителя=Найти(Сред(Стр,ПозицияЗакрКавычек), Разделитель);
				ПозицияРазделителя = ?(ПозицияРазделителя>0, ПозицияЗакрКавычек + ПозицияРазделителя-1, 0);
			КонецЕсли;

			Токен = Токен + ?(ПозицияРазделителя>0, Сред(Стр, 1, ПозицияРазделителя-1), Стр);
			Стр = ?(ПозицияРазделителя>0, Сред(Стр, ПозицияРазделителя+1), "");
			
			Если Лев(Токен, 1) = """" Тогда
				Токен = Сред(Токен, 2);
				Токен = ?(Прав(Токен, 1) = """", Сред(Токен, 1, СтрДлина(Токен)-1), Токен);
			КонецЕсли;
			Токен = СтрЗаменить(Токен, ОсобаяСтрока, """");
			
			НомерПоля = НомерПоля + 1;
			Если ТЗ.Колонки.Количество()<НомерПоля Тогда
				ТЗ.Колонки.Добавить("Колонка"+НомерПоля, ДопустимыеТипы, Токен);
			КонецЕсли;
			СтрокаТЗ[НомерПоля-1] = Токен;

		КонецЦикла;
		НомерСтроки = НомерСтроки + 1;
		Стр = СтрПолучитьСтроку(ТекстCSV, НомерСтроки);
	КонецЦикла;
	
	Тз.Удалить(0);   // удалим колонку заголовков
	
	Возврат ТЗ;
КонецФункции


&НаСервере
Процедура ЗагрузитьНаСервере(пИмяФайла, пНомерЛиста, пНачальнаяСтрока,  пКолонкаЦена, пДополнительныеПараметры, пЗагрузка_из_csv)

		
		
		Попытка
			Excel     = Новый COMОбъект("Excel.Application");
			Excel.DisplayAlerts = False;
			WB         = Excel.Workbooks.Open(пИмяФайла);
			WS         = WB.Worksheets(пНомерЛиста);
		Исключение
			СообщитьСерв("Внимание! Файл не открыт."+Символы.ПС+"Попробуйте открыть и пересохранить данный файл программой Эксель.", ЭтаФорма);
			Возврат;
		КонецПопытки;
		
		
		ТаблицаИзФайла=ПрочитатьБыстроЛистExcel(, WS, пНачальнаяСтрока,,,,);
		
		ОбработкаТаблицыФайла(ТаблицаИзФайла,  пКолонкаЦена, пДополнительныеПараметры);
		
		Попытка
			
			WB.Close(пИмяФайла);
			Excel.Quit();
			Excel.DisplayAlerts=-1;
			Excel=Неопределено;
			
			
		Исключение
			СообщитьСерв("Ошибка закрытия файла "+пИмяФайла, ЭтаФорма);
		КонецПопытки;
КонецПроцедуры


// загрузка ///////////////////////////////////////////



// Чтение из файла//////////////////////////////////

&НаСервере
Процедура ОбработкаТаблицыФайла(пТзИзФайла,  пКолонкаЦены, пДополнительныеПараметры)
	
	ИмяКолонкиНаименование="Наименование";
	ИмяКолонкиЦена="Цена";
	
	 Отказ=Ложь;
	 
	 ИменоватьКолонкиТз(пТзИзФайла,  пКолонкаЦены);
	 
	 
	НайтиНоменклатуруДляПеревода(пТзИзФайла);
 
	 
КонецПроцедуры


Процедура НайтиНоменклатуруДляПеревода(пТзПеревода)

	Для Каждого СтрокаТз из пТзПеревода Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТз.Слово) Тогда
			Продолжить;
		КонецЕсли;	
		
		ПеревестиНоменклатуру(СтрокаТз.Слово, СтрокаТз.Перевод);
		
	КонецЦикла;	

КонецПроцедуры


Процедура Перевестиноменклатуру(пСлово, пПеревод)

	    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование ПОДОБНО &Слово";
	
	Запрос.УстановитьПараметр("Слово", "% "+пСлово+" %");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Счетчик=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		ОбъектНоменклатура=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ОбъектНоменклатура.НаименованиеПолное=СтрЗаменить(ОбъектНоменклатура.НаименованиеПолное, " "+пСлово+" ", " "+пПеревод+" ");
		Попытка
			
			ОбъектНоменклатура.записать();
			
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
		
		Счетчик=Счетчик+1;
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = строка(Счетчик);
	Сообщение.Сообщить();

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецПроцедуры



&НаСервере
Процедура ИменоватьКолонкиТз(пТзИзФайла,  пКолонкаЦены)

	
	пТзИзФайла.Колонки[0].Имя="Слово";
	пТзИзФайла.Колонки[1].Имя="Перевод";

	
	
	пТзИзФайла.Удалить(пТзИзФайла[0]);
	
	
КонецПроцедуры


// Чтение из файла ///////////////////////////////////


&НаСервере
Функция РасширениеФайла(Знач ИмяФайла)
	
	ПозицияТочки = ПоследнийРазделитель(ИмяФайла);
	
	Расширение = Прав(ИмяФайла,СтрДлина(ИмяФайла) - ПозицияТочки + 1);
	
	Возврат Расширение;
	
КонецФункции


&НаСервере
Функция ПоследнийРазделитель(СтрокаСРазделителем, Разделитель = ".")
	
	ДлинаСтроки = СтрДлина(СтрокаСРазделителем);
	
	Пока ДлинаСтроки > 0 Цикл
		
		Если Сред(СтрокаСРазделителем, ДлинаСтроки, 1) = Разделитель Тогда
			
			Возврат ДлинаСтроки; 
			
		КонецЕсли;
		
		ДлинаСтроки = ДлинаСтроки - 1;
		
	КонецЦикла;

КонецФункции

//////////// Обработчки элементов формы  ///////////////////////////////////////


// выбор файла
&НаКлиенте
Процедура ВыборФайла(Элемент, ПроверятьСуществование=Ложь)

	

	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбора.Фильтр     = "Файл данных xlsx (*.xlsx)|*.xlsx";
	ДиалогВыбора.Расширение = "xlsx";
	
	ДиалогВыбора.Заголовок ="Выберите файл для загрузки данных ";
	
	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПроверятьСуществованиеФайла = ПроверятьСуществование;
	//ДиалогВыбора.ПолноеИмяФайла				=	Элемент.Значение;
	
	
	Если ДиалогВыбора.Выбрать() Тогда
		//Элемент = ДиалогВыбора.ПолноеИмяФайла;
		ИмяФайла= ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;			
	


КонецПроцедуры // ВыборФойла()

&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ЗапуститьПриложение(ИмяФайла);
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ВыборФайла(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ВыборФайла(Элемент);
КонецПроцедуры
// выбор файла



//////////// Обработчки элементов формы  ///////////////////////////////////////

///Вспомогательные ф-ии/////////////////////////

&НаСервере
Процедура СообщитьСерв(пСтрокаСообщения, пОбъект)

	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = пСтрокаСообщения;
	//Сообщение.Поле = "";
	//Сообщение.КлючДанных=пОбъект.ссылка;
	Сообщение.УстановитьДанные(пОбъект);
	Сообщение.Сообщить();
	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
  //  //Вставить содержимое обработчика
  //   Сообщение = Новый СообщениеПользователю;
  //Сообщение.Текст = Строка(ВладелецФормы.Объект.Дата);
  ////Сообщение.Поле = "";
  //Сообщение.УстановитьДанные(ЭтаФорма);
  //Сообщение.Сообщить();
  //Документ=ВладелецФормы.Объект;
КонецПроцедуры


///Вспомогательные ф-ии/////////////////////////



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОбъектыНазначения") тогда
		Документ = Параметры.ОбъектыНазначения[0];
		
		//Сообщение = Новый СообщениеПользователю;
		//Сообщение.Текст = Строка(Документ);
		////Сообщение.Поле = "";
		//Сообщение.УстановитьДанные(ЭтаФорма);
		//Сообщение.Сообщить();

	КонецЕсли;
КонецПроцедуры


